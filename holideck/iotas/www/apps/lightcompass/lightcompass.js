/*
	@file: apps/lightcompass/lightcompass.js
*/

function lightcompass() {
	
	console.log("function lightcompass()");
	
	this.appStart = appStart;
	this.appQuit = appQuit;
	this.theCanvas = document.getElementById('compasscolor');
	this.context = this.theCanvas.getContext('2d');
	this.startLightCompass = startLightCompass;
	this.deviceOrientationHandler = deviceOrientationHandler;
	this.rotation = null;
	this.updateTimer = null;
	this.withOrientationData = withOrientationData;
	this.fillCompass = fillCompass;
	this.r = 0x00;
	this.g = 0x00;
	this.b = 0x00;

	// Start App
	function appStart() {
		console.log("lightcompass.appStart");
		$("head").append('<link rel="stylesheet" href="lightcompass.css" />');
		startLightCompass();
	}
	
	// Quit App
	function appQuit() {
		console.log(theApp.cca);
		console.log("lightcompass.appQuit");
		window.removeEventListener('deviceorientation', theApp.withOrientationData, false);
		window.clearInterval(theApp.updateTimer);		// And clear the timer
	}
	
	function withOrientationData(eventData) {
	    // gamma is the left-to-right tilt in degrees, where right is positive
	    var tiltLR = eventData.gamma;

	    // beta is the front-to-back tilt in degrees, where front is positive
	    var tiltFB = eventData.beta;

	    // alpha is the compass direction the device is facing in degrees
	    var dir = eventData.alpha;

	    // call our orientation event handler
	    theApp.deviceOrientationHandler(tiltLR, tiltFB, dir);
	}

	// We'll check the compass every 10th of a second
	// That is, if we can check it at all.
	function startLightCompass() {

		// Test for DeviceOrientationEvent
		if (window.DeviceOrientationEvent) {
		 console.log("DeviceOrientation is supported");
		} else {
			console.log("DeviceOrientation not supported");
			window.alert("LightCompass not supported.");
			return;
		}

		// Set up the something something here
		// Listen for the event and handle DeviceOrientationEvent object
  		window.addEventListener('deviceorientation', theApp.withOrientationData, false);

  		// And start an update timer at 5 hz to begin with
  		theApp.updateTimer = window.setInterval(lightCompassUpdate, 200);

	}

	// Fill the canvas with the appropriate colour
	function fillCompass() {
		console.log('lightcompass.fillCompass');
		var centerX = theApp.theCanvas.width / 2;
		var centerY = theApp.theCanvas.height / 2;
		var radius = 120;
		theApp.context.beginPath();
		theApp.context.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);

		theApp.context.fillStyle = currentLight.rgb2hex(theApp.r, theApp.g, theApp.b);
		theApp.context.fill();
		theApp.context.lineWidth = 5;
		theApp.context.strokeStyle = "#000033"
		theApp.context.stroke();
		return;

	}

	// The DeviceOrientationEvents are sent here for processing
	// Ignore the left/right front/back events at the moment.
	function deviceOrientationHandler(lr, fb, dir) {
		console.log("deviceOrientationHandler", lr, fb, dir);
		if (dir != null) {
			theApp.rotation = Math.floor(dir);
			//grees = theApp.rotation.toString();		
			theApp.fillCompass();
		} //else {
		//	var grees = 'null';
		//}
		//$('#degrees').text(grees);
	}
	
	function lightCompassUpdate() {
		console.log('lightCompassUpdate');

		var cca = [
			[ 0xff, 0x00, 0x00 ],
			[ 0xfd, 0x02, 0x00 ],
			[ 0xfb, 0x04, 0x00 ],
			[ 0xf9, 0x06, 0x00 ],
			[ 0xf7, 0x08, 0x00 ],
			[ 0xf5, 0x0a, 0x00 ],
			[ 0xf3, 0x0c, 0x00 ],
			[ 0xf1, 0x0e, 0x00 ],
			[ 0xee, 0x11, 0x00 ],
			[ 0xec, 0x13, 0x00 ],
			[ 0xea, 0x15, 0x00 ],
			[ 0xe8, 0x17, 0x00 ],
			[ 0xe6, 0x19, 0x00 ],
			[ 0xe4, 0x1b, 0x00 ],
			[ 0xe2, 0x1d, 0x00 ],
			[ 0xe0, 0x1f, 0x00 ],
			[ 0xdd, 0x22, 0x00 ],
			[ 0xdb, 0x24, 0x00 ],
			[ 0xd9, 0x26, 0x00 ],
			[ 0xd7, 0x28, 0x00 ],
			[ 0xd5, 0x2a, 0x00 ],
			[ 0xd3, 0x2c, 0x00 ],
			[ 0xd1, 0x2e, 0x00 ],
			[ 0xcf, 0x30, 0x00 ],
			[ 0xcc, 0x33, 0x00 ],
			[ 0xca, 0x35, 0x00 ],
			[ 0xc8, 0x37, 0x00 ],
			[ 0xc6, 0x39, 0x00 ],
			[ 0xc4, 0x3b, 0x00 ],
			[ 0xc2, 0x3d, 0x00 ],
			[ 0xc0, 0x3f, 0x00 ],
			[ 0xbe, 0x41, 0x00 ],
			[ 0xbb, 0x44, 0x00 ],
			[ 0xb9, 0x46, 0x00 ],
			[ 0xb7, 0x48, 0x00 ],
			[ 0xb5, 0x4a, 0x00 ],
			[ 0xb3, 0x4c, 0x00 ],
			[ 0xb1, 0x4e, 0x00 ],
			[ 0xaf, 0x50, 0x00 ],
			[ 0xad, 0x52, 0x00 ],
			[ 0xaa, 0x55, 0x00 ],
			[ 0xa8, 0x57, 0x00 ],
			[ 0xa6, 0x59, 0x00 ],
			[ 0xa4, 0x5b, 0x00 ],
			[ 0xa2, 0x5d, 0x00 ],
			[ 0xa0, 0x5f, 0x00 ],
			[ 0x9e, 0x61, 0x00 ],
			[ 0x9c, 0x63, 0x00 ],
			[ 0x99, 0x66, 0x00 ],
			[ 0x97, 0x68, 0x00 ],
			[ 0x95, 0x6a, 0x00 ],
			[ 0x93, 0x6c, 0x00 ],
			[ 0x91, 0x6e, 0x00 ],
			[ 0x8f, 0x70, 0x00 ],
			[ 0x8d, 0x72, 0x00 ],
			[ 0x8b, 0x74, 0x00 ],
			[ 0x88, 0x77, 0x00 ],
			[ 0x86, 0x79, 0x00 ],
			[ 0x84, 0x7b, 0x00 ],
			[ 0x82, 0x7d, 0x00 ],
			[ 0x80, 0x7f, 0x00 ],
			[ 0x7e, 0x81, 0x00 ],
			[ 0x7c, 0x83, 0x00 ],
			[ 0x7a, 0x85, 0x00 ],
			[ 0x77, 0x88, 0x00 ],
			[ 0x75, 0x8a, 0x00 ],
			[ 0x73, 0x8c, 0x00 ],
			[ 0x71, 0x8e, 0x00 ],
			[ 0x6f, 0x90, 0x00 ],
			[ 0x6d, 0x92, 0x00 ],
			[ 0x6b, 0x94, 0x00 ],
			[ 0x69, 0x96, 0x00 ],
			[ 0x66, 0x99, 0x00 ],
			[ 0x64, 0x9b, 0x00 ],
			[ 0x62, 0x9d, 0x00 ],
			[ 0x60, 0x9f, 0x00 ],
			[ 0x5e, 0xa1, 0x00 ],
			[ 0x5c, 0xa3, 0x00 ],
			[ 0x5a, 0xa5, 0x00 ],
			[ 0x58, 0xa7, 0x00 ],
			[ 0x55, 0xaa, 0x00 ],
			[ 0x53, 0xac, 0x00 ],
			[ 0x51, 0xae, 0x00 ],
			[ 0x4f, 0xb0, 0x00 ],
			[ 0x4d, 0xb2, 0x00 ],
			[ 0x4b, 0xb4, 0x00 ],
			[ 0x49, 0xb6, 0x00 ],
			[ 0x47, 0xb8, 0x00 ],
			[ 0x44, 0xbb, 0x00 ],
			[ 0x42, 0xbd, 0x00 ],
			[ 0x40, 0xbf, 0x00 ],
			[ 0x3e, 0xc1, 0x00 ],
			[ 0x3c, 0xc3, 0x00 ],
			[ 0x3a, 0xc5, 0x00 ],
			[ 0x38, 0xc7, 0x00 ],
			[ 0x36, 0xc9, 0x00 ],
			[ 0x33, 0xcc, 0x00 ],
			[ 0x31, 0xce, 0x00 ],
			[ 0x2f, 0xd0, 0x00 ],
			[ 0x2d, 0xd2, 0x00 ],
			[ 0x2b, 0xd4, 0x00 ],
			[ 0x29, 0xd6, 0x00 ],
			[ 0x27, 0xd8, 0x00 ],
			[ 0x25, 0xda, 0x00 ],
			[ 0x22, 0xdd, 0x00 ],
			[ 0x20, 0xdf, 0x00 ],
			[ 0x1e, 0xe1, 0x00 ],
			[ 0x1c, 0xe3, 0x00 ],
			[ 0x1a, 0xe5, 0x00 ],
			[ 0x18, 0xe7, 0x00 ],
			[ 0x16, 0xe9, 0x00 ],
			[ 0x14, 0xeb, 0x00 ],
			[ 0x11, 0xee, 0x00 ],
			[ 0x0f, 0xf0, 0x00 ],
			[ 0x0d, 0xf2, 0x00 ],
			[ 0x0b, 0xf4, 0x00 ],
			[ 0x09, 0xf6, 0x00 ],
			[ 0x07, 0xf8, 0x00 ],
			[ 0x05, 0xfa, 0x00 ],
			[ 0x03, 0xfc, 0x00 ],
			[ 0x00, 0xff, 0x00 ],
			[ 0x00, 0xfd, 0x02 ],
			[ 0x00, 0xfb, 0x04 ],
			[ 0x00, 0xf9, 0x06 ],
			[ 0x00, 0xf7, 0x08 ],
			[ 0x00, 0xf5, 0x0a ],
			[ 0x00, 0xf3, 0x0c ],
			[ 0x00, 0xf1, 0x0e ],
			[ 0x00, 0xee, 0x11 ],
			[ 0x00, 0xec, 0x13 ],
			[ 0x00, 0xea, 0x15 ],
			[ 0x00, 0xe8, 0x17 ],
			[ 0x00, 0xe6, 0x19 ],
			[ 0x00, 0xe4, 0x1b ],
			[ 0x00, 0xe2, 0x1d ],
			[ 0x00, 0xe0, 0x1f ],
			[ 0x00, 0xdd, 0x22 ],
			[ 0x00, 0xdb, 0x24 ],
			[ 0x00, 0xd9, 0x26 ],
			[ 0x00, 0xd7, 0x28 ],
			[ 0x00, 0xd5, 0x2a ],
			[ 0x00, 0xd3, 0x2c ],
			[ 0x00, 0xd1, 0x2e ],
			[ 0x00, 0xcf, 0x30 ],
			[ 0x00, 0xcc, 0x33 ],
			[ 0x00, 0xca, 0x35 ],
			[ 0x00, 0xc8, 0x37 ],
			[ 0x00, 0xc6, 0x39 ],
			[ 0x00, 0xc4, 0x3b ],
			[ 0x00, 0xc2, 0x3d ],
			[ 0x00, 0xc0, 0x3f ],
			[ 0x00, 0xbe, 0x41 ],
			[ 0x00, 0xbb, 0x44 ],
			[ 0x00, 0xb9, 0x46 ],
			[ 0x00, 0xb7, 0x48 ],
			[ 0x00, 0xb5, 0x4a ],
			[ 0x00, 0xb3, 0x4c ],
			[ 0x00, 0xb1, 0x4e ],
			[ 0x00, 0xaf, 0x50 ],
			[ 0x00, 0xad, 0x52 ],
			[ 0x00, 0xaa, 0x55 ],
			[ 0x00, 0xa8, 0x57 ],
			[ 0x00, 0xa6, 0x59 ],
			[ 0x00, 0xa4, 0x5b ],
			[ 0x00, 0xa2, 0x5d ],
			[ 0x00, 0xa0, 0x5f ],
			[ 0x00, 0x9e, 0x61 ],
			[ 0x00, 0x9c, 0x63 ],
			[ 0x00, 0x99, 0x66 ],
			[ 0x00, 0x97, 0x68 ],
			[ 0x00, 0x95, 0x6a ],
			[ 0x00, 0x93, 0x6c ],
			[ 0x00, 0x91, 0x6e ],
			[ 0x00, 0x8f, 0x70 ],
			[ 0x00, 0x8d, 0x72 ],
			[ 0x00, 0x8b, 0x74 ],
			[ 0x00, 0x88, 0x77 ],
			[ 0x00, 0x86, 0x79 ],
			[ 0x00, 0x84, 0x7b ],
			[ 0x00, 0x82, 0x7d ],
			[ 0x00, 0x80, 0x7f ],
			[ 0x00, 0x7e, 0x81 ],
			[ 0x00, 0x7c, 0x83 ],
			[ 0x00, 0x7a, 0x85 ],
			[ 0x00, 0x77, 0x88 ],
			[ 0x00, 0x75, 0x8a ],
			[ 0x00, 0x73, 0x8c ],
			[ 0x00, 0x71, 0x8e ],
			[ 0x00, 0x6f, 0x90 ],
			[ 0x00, 0x6d, 0x92 ],
			[ 0x00, 0x6b, 0x94 ],
			[ 0x00, 0x69, 0x96 ],
			[ 0x00, 0x66, 0x99 ],
			[ 0x00, 0x64, 0x9b ],
			[ 0x00, 0x62, 0x9d ],
			[ 0x00, 0x60, 0x9f ],
			[ 0x00, 0x5e, 0xa1 ],
			[ 0x00, 0x5c, 0xa3 ],
			[ 0x00, 0x5a, 0xa5 ],
			[ 0x00, 0x58, 0xa7 ],
			[ 0x00, 0x55, 0xaa ],
			[ 0x00, 0x53, 0xac ],
			[ 0x00, 0x51, 0xae ],
			[ 0x00, 0x4f, 0xb0 ],
			[ 0x00, 0x4d, 0xb2 ],
			[ 0x00, 0x4b, 0xb4 ],
			[ 0x00, 0x49, 0xb6 ],
			[ 0x00, 0x47, 0xb8 ],
			[ 0x00, 0x44, 0xbb ],
			[ 0x00, 0x42, 0xbd ],
			[ 0x00, 0x40, 0xbf ],
			[ 0x00, 0x3e, 0xc1 ],
			[ 0x00, 0x3c, 0xc3 ],
			[ 0x00, 0x3a, 0xc5 ],
			[ 0x00, 0x38, 0xc7 ],
			[ 0x00, 0x36, 0xc9 ],
			[ 0x00, 0x33, 0xcc ],
			[ 0x00, 0x31, 0xce ],
			[ 0x00, 0x2f, 0xd0 ],
			[ 0x00, 0x2d, 0xd2 ],
			[ 0x00, 0x2b, 0xd4 ],
			[ 0x00, 0x29, 0xd6 ],
			[ 0x00, 0x27, 0xd8 ],
			[ 0x00, 0x25, 0xda ],
			[ 0x00, 0x22, 0xdd ],
			[ 0x00, 0x20, 0xdf ],
			[ 0x00, 0x1e, 0xe1 ],
			[ 0x00, 0x1c, 0xe3 ],
			[ 0x00, 0x1a, 0xe5 ],
			[ 0x00, 0x18, 0xe7 ],
			[ 0x00, 0x16, 0xe9 ],
			[ 0x00, 0x14, 0xeb ],
			[ 0x00, 0x11, 0xee ],
			[ 0x00, 0x0f, 0xf0 ],
			[ 0x00, 0x0d, 0xf2 ],
			[ 0x00, 0x0b, 0xf4 ],
			[ 0x00, 0x09, 0xf6 ],
			[ 0x00, 0x07, 0xf8 ],
			[ 0x00, 0x05, 0xfa ],
			[ 0x00, 0x03, 0xfc ],
			[ 0x00, 0x00, 0xff ],
			[ 0x02, 0x00, 0xfd ],
			[ 0x04, 0x00, 0xfb ],
			[ 0x06, 0x00, 0xf9 ],
			[ 0x08, 0x00, 0xf7 ],
			[ 0x0a, 0x00, 0xf5 ],
			[ 0x0c, 0x00, 0xf3 ],
			[ 0x0e, 0x00, 0xf1 ],
			[ 0x11, 0x00, 0xee ],
			[ 0x13, 0x00, 0xec ],
			[ 0x15, 0x00, 0xea ],
			[ 0x17, 0x00, 0xe8 ],
			[ 0x19, 0x00, 0xe6 ],
			[ 0x1b, 0x00, 0xe4 ],
			[ 0x1d, 0x00, 0xe2 ],
			[ 0x1f, 0x00, 0xe0 ],
			[ 0x22, 0x00, 0xdd ],
			[ 0x24, 0x00, 0xdb ],
			[ 0x26, 0x00, 0xd9 ],
			[ 0x28, 0x00, 0xd7 ],
			[ 0x2a, 0x00, 0xd5 ],
			[ 0x2c, 0x00, 0xd3 ],
			[ 0x2e, 0x00, 0xd1 ],
			[ 0x30, 0x00, 0xcf ],
			[ 0x33, 0x00, 0xcc ],
			[ 0x35, 0x00, 0xca ],
			[ 0x37, 0x00, 0xc8 ],
			[ 0x39, 0x00, 0xc6 ],
			[ 0x3b, 0x00, 0xc4 ],
			[ 0x3d, 0x00, 0xc2 ],
			[ 0x3f, 0x00, 0xc0 ],
			[ 0x41, 0x00, 0xbe ],
			[ 0x44, 0x00, 0xbb ],
			[ 0x46, 0x00, 0xb9 ],
			[ 0x48, 0x00, 0xb7 ],
			[ 0x4a, 0x00, 0xb5 ],
			[ 0x4c, 0x00, 0xb3 ],
			[ 0x4e, 0x00, 0xb1 ],
			[ 0x50, 0x00, 0xaf ],
			[ 0x52, 0x00, 0xad ],
			[ 0x55, 0x00, 0xaa ],
			[ 0x57, 0x00, 0xa8 ],
			[ 0x59, 0x00, 0xa6 ],
			[ 0x5b, 0x00, 0xa4 ],
			[ 0x5d, 0x00, 0xa2 ],
			[ 0x5f, 0x00, 0xa0 ],
			[ 0x61, 0x00, 0x9e ],
			[ 0x63, 0x00, 0x9c ],
			[ 0x66, 0x00, 0x99 ],
			[ 0x68, 0x00, 0x97 ],
			[ 0x6a, 0x00, 0x95 ],
			[ 0x6c, 0x00, 0x93 ],
			[ 0x6e, 0x00, 0x91 ],
			[ 0x70, 0x00, 0x8f ],
			[ 0x72, 0x00, 0x8d ],
			[ 0x74, 0x00, 0x8b ],
			[ 0x77, 0x00, 0x88 ],
			[ 0x79, 0x00, 0x86 ],
			[ 0x7b, 0x00, 0x84 ],
			[ 0x7d, 0x00, 0x82 ],
			[ 0x7f, 0x00, 0x80 ],
			[ 0x81, 0x00, 0x7e ],
			[ 0x83, 0x00, 0x7c ],
			[ 0x85, 0x00, 0x7a ],
			[ 0x88, 0x00, 0x77 ],
			[ 0x8a, 0x00, 0x75 ],
			[ 0x8c, 0x00, 0x73 ],
			[ 0x8e, 0x00, 0x71 ],
			[ 0x90, 0x00, 0x6f ],
			[ 0x92, 0x00, 0x6d ],
			[ 0x94, 0x00, 0x6b ],
			[ 0x96, 0x00, 0x69 ],
			[ 0x99, 0x00, 0x66 ],
			[ 0x9b, 0x00, 0x64 ],
			[ 0x9d, 0x00, 0x62 ],
			[ 0x9f, 0x00, 0x60 ],
			[ 0xa1, 0x00, 0x5e ],
			[ 0xa3, 0x00, 0x5c ],
			[ 0xa5, 0x00, 0x5a ],
			[ 0xa7, 0x00, 0x58 ],
			[ 0xaa, 0x00, 0x55 ],
			[ 0xac, 0x00, 0x53 ],
			[ 0xae, 0x00, 0x51 ],
			[ 0xb0, 0x00, 0x4f ],
			[ 0xb2, 0x00, 0x4d ],
			[ 0xb4, 0x00, 0x4b ],
			[ 0xb6, 0x00, 0x49 ],
			[ 0xb8, 0x00, 0x47 ],
			[ 0xbb, 0x00, 0x44 ],
			[ 0xbd, 0x00, 0x42 ],
			[ 0xbf, 0x00, 0x40 ],
			[ 0xc1, 0x00, 0x3e ],
			[ 0xc3, 0x00, 0x3c ],
			[ 0xc5, 0x00, 0x3a ],
			[ 0xc7, 0x00, 0x38 ],
			[ 0xc9, 0x00, 0x36 ],
			[ 0xcc, 0x00, 0x33 ],
			[ 0xce, 0x00, 0x31 ],
			[ 0xd0, 0x00, 0x2f ],
			[ 0xd2, 0x00, 0x2d ],
			[ 0xd4, 0x00, 0x2b ],
			[ 0xd6, 0x00, 0x29 ],
			[ 0xd8, 0x00, 0x27 ],
			[ 0xda, 0x00, 0x25 ],
			[ 0xdd, 0x00, 0x22 ],
			[ 0xdf, 0x00, 0x20 ],
			[ 0xe1, 0x00, 0x1e ],
			[ 0xe3, 0x00, 0x1c ],
			[ 0xe5, 0x00, 0x1a ],
			[ 0xe7, 0x00, 0x18 ],
			[ 0xe9, 0x00, 0x16 ],
			[ 0xeb, 0x00, 0x14 ],
			[ 0xee, 0x00, 0x11 ],
			[ 0xf0, 0x00, 0x0f ],
			[ 0xf2, 0x00, 0x0d ],
			[ 0xf4, 0x00, 0x0b ],
			[ 0xf6, 0x00, 0x09 ],
			[ 0xf8, 0x00, 0x07 ],
			[ 0xfa, 0x00, 0x05 ],
			[ 0xfc, 0x00, 0x03 ]
		];

		// here we translate the rotation value (0 - 360) into a colour
		// Then send that along to the Holiday.  Too easy. 
		var rgb;
		if (theApp.rotation == null) {
			rgb = cca[0];
		} else {
			rgb = cca[theApp.rotation];
		}
		console.log(theApp.rotation, rgb);
		theApp.r = rgb[0];
		theApp.g = rgb[1];
		theApp.b = rgb[2];
		currentLight.setlamp(rgb[0], rgb[1], rgb[2]);
		//currentLight.fastsetall(rgb[0], rgb[1], rgb[2]);
		//currentLight.fastlights();
	}
	


}
